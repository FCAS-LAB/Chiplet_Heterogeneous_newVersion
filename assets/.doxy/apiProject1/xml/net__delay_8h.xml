<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="net__delay_8h" kind="file" language="C++">
    <compoundname>net_delay.h</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">map</includes>
    <includes refid="global__define_8h" local="yes">global_define.h</includes>
    <includes local="yes">spdlog/spdlog.h</includes>
    <includedby refid="cmd__handler_8h" local="yes">/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/cmd_handler.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h</label>
        <link refid="net__delay_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="2">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="4">
        <label>global_define.h</label>
        <link refid="global__define_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h</label>
        <link refid="net__delay_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/cmd_handler.h</label>
        <link refid="cmd__handler_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classInterChiplet_1_1NetworkDelayItem" prot="public">InterChiplet::NetworkDelayItem</innerclass>
    <innerclass refid="classInterChiplet_1_1NetworkDelayMap" prot="public">InterChiplet::NetworkDelayMap</innerclass>
    <innerclass refid="classInterChiplet_1_1NetworkDelayStruct" prot="public">InterChiplet::NetworkDelayStruct</innerclass>
    <innernamespace refid="namespaceInterChiplet">InterChiplet</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="net__delay_8h_1a8685de6e6074df3e62c767fcf0b8d886" prot="public" static="no">
        <name>PAC_PAYLOAD_BIT</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" line="9" column="9" bodyfile="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="net__delay_8h_1a48db85544f7162f62541900922dd71ab" prot="public" static="no">
        <name>PAC_PAYLOAD_BYTE</name>
        <initializer>(PAC_PAYLOAD_BIT / 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" line="10" column="9" bodyfile="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="net__delay_8h_1ab2cadc5e1bdc6430743caafe1387f56b" prot="public" static="no">
        <name>SRC_DELAY</name>
        <param><defname>pair</defname></param>
        <initializer>std::get&lt;0&gt;(pair)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" line="105" column="9" bodyfile="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="net__delay_8h_1ac5cfb612929f51312de05e4b4f9bb6a7" prot="public" static="no">
        <name>DST_DELAY</name>
        <param><defname>pair</defname></param>
        <initializer>std::get&lt;1&gt;(pair)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" line="106" column="9" bodyfile="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;global_define.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/spdlog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAC_PAYLOAD_BIT<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAC_PAYLOAD_BYTE<sp/>(PAC_PAYLOAD_BIT<sp/>/<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">InterChiplet<sp/>{</highlight></codeline>
<codeline lineno="16" refid="classInterChiplet_1_1NetworkDelayItem" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21" refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>InnerTimeType<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" kindref="member">m_cycle</ref>;</highlight></codeline>
<codeline lineno="25" refid="classInterChiplet_1_1NetworkDelayItem_1a27d75951b13fa561db905b1552d92190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a27d75951b13fa561db905b1552d92190" kindref="member">m_id</ref>;</highlight></codeline>
<codeline lineno="29" refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AddrType<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>;</highlight></codeline>
<codeline lineno="33" refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AddrType<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>;</highlight></codeline>
<codeline lineno="37" refid="classInterChiplet_1_1NetworkDelayItem_1a6494c45ddeca438d9411473d4e369e51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a6494c45ddeca438d9411473d4e369e51" kindref="member">m_desc</ref>;</highlight></codeline>
<codeline lineno="44" refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;InnerTimeType&gt;<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classInterChiplet_1_1NetworkDelayItem_1ab8e54d5746990e58cdb1476831ffc3ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1ab8e54d5746990e58cdb1476831ffc3ba" kindref="member">NetworkDelayItem</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classInterChiplet_1_1NetworkDelayItem_1aead03120cd7a91dfb12cfba836fe96ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1aead03120cd7a91dfb12cfba836fe96ef" kindref="member">NetworkDelayItem</ref>(InnerTimeType<sp/>__cycle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__desc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;InnerTimeType&gt;&amp;<sp/>__delay_list)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" kindref="member">m_cycle</ref>(__cycle),<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>(__dst),<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>(__src),<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>(__delay_list)<sp/>{}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classInterChiplet_1_1NetworkDelayItem_1a136796f32b6f19e903b10633ba782fbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1a136796f32b6f19e903b10633ba782fbd" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>&amp;<sp/>__item)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" kindref="member">m_cycle</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DIM_X(__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DIM_Y(__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>DIM_Y(__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DIM_X(__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a6494c45ddeca438d9411473d4e369e51" kindref="member">m_desc</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>.size();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>delay<sp/>:<sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>delay;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classInterChiplet_1_1NetworkDelayItem_1af4f074546559613383491525a7c47038" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::istream&amp;<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem_1af4f074546559613383491525a7c47038" kindref="member">operator&gt;&gt;</ref>(std::istream&amp;<sp/>os,<sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>&amp;<sp/>__item)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&gt;&gt;<sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" kindref="member">m_cycle</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>src_x,<sp/>src_y,<sp/>dst_x,<sp/>dst_y;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&gt;&gt;<sp/>src_x<sp/>&gt;&gt;<sp/>src_y<sp/>&gt;&gt;<sp/>dst_x<sp/>&gt;&gt;<sp/>dst_y;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>.push_back(src_x);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>.push_back(src_y);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>.push_back(dst_x);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>.push_back(dst_y);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&gt;&gt;<sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a6494c45ddeca438d9411473d4e369e51" kindref="member">m_desc</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&gt;&gt;<sp/>delay_cnt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>delay_cnt;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeType<sp/>delay;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&gt;&gt;<sp/>delay;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>.push_back(delay);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;InnerTimeType,<sp/>InnerTimeType&gt;<sp/>CmdDelayPair;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRC_DELAY(pair)<sp/>std::get&lt;0&gt;(pair)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DST_DELAY(pair)<sp/>std::get&lt;1&gt;(pair)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::multimap&lt;InnerTimeType,<sp/>NetworkDelayItem&gt;<sp/>NetworkDelayOrder;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classInterChiplet_1_1NetworkDelayMap" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classInterChiplet_1_1NetworkDelayMap" kindref="compound">NetworkDelayMap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::map&lt;AddrType,<sp/>NetworkDelayOrder&gt;<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120" refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr,<sp/>InnerTimeType<sp/>__cycle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>&amp;<sp/>__item)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[__addr]<sp/>=<sp/>NetworkDelayOrder();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[__addr].insert(std::pair&lt;InnerTimeType,<sp/>NetworkDelayItem&gt;(__cycle,<sp/>__item));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classInterChiplet_1_1NetworkDelayMap_1abc51e1445630306b6fb81f598bcc432c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1abc51e1445630306b6fb81f598bcc432c" kindref="member">hasAddr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>delay<sp/>information<sp/>for<sp/>the<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at(__addr).size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classInterChiplet_1_1NetworkDelayMap_1afc2c03d3a04bb0e4a7117271fae10027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1afc2c03d3a04bb0e4a7117271fae10027" kindref="member">hasAddr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>delay<sp/>information<sp/>for<sp/>the<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NetworkDelayOrder::iterator<sp/>it<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[__addr].begin();<sp/>it<sp/>!=<sp/>(*this)[__addr].end();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.m_src<sp/>==<sp/>__src<sp/>&amp;&amp;<sp/>it-&gt;second.m_dst<sp/>==<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classInterChiplet_1_1NetworkDelayMap_1ad1c4eec044c5fbcc94a5b799743dd7bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1ad1c4eec044c5fbcc94a5b799743dd7bc" kindref="member">front</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>destination<sp/>address,<sp/>return<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>delay<sp/>information<sp/>for<sp/>the<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at(__addr).size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at(__addr).begin()-&gt;second;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classInterChiplet_1_1NetworkDelayMap_1abf61f88d0fb1053da544091e7120d53d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1abf61f88d0fb1053da544091e7120d53d" kindref="member">front</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>destination<sp/>address,<sp/>return<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>delay<sp/>information<sp/>for<sp/>the<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NetworkDelayOrder::iterator<sp/>it<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[__addr].begin();<sp/>it<sp/>!=<sp/>(*this)[__addr].end();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.m_src<sp/>==<sp/>__src<sp/>&amp;&amp;<sp/>it-&gt;second.m_dst<sp/>==<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classInterChiplet_1_1NetworkDelayMap_1a5c88e89ebd440cdc43aafcfe4447bcae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1a5c88e89ebd440cdc43aafcfe4447bcae" kindref="member">pop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>destination<sp/>address,<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>delay<sp/>information<sp/>for<sp/>the<sp/>address,<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at(__addr).size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at(__addr).erase(at(__addr).begin());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classInterChiplet_1_1NetworkDelayMap_1ac03604a15556bafc10096501fb90f1c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1ac03604a15556bafc10096501fb90f1c2" kindref="member">pop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>destination<sp/>address,<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__addr)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>delay<sp/>information<sp/>for<sp/>the<sp/>address,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NetworkDelayOrder::iterator<sp/>it<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[__addr].begin();<sp/>it<sp/>!=<sp/>(*this)[__addr].end();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.m_src<sp/>==<sp/>__src<sp/>&amp;&amp;<sp/>it-&gt;second.m_dst<sp/>==<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[__addr].erase(it);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classInterChiplet_1_1NetworkDelayMap_1a9acc3c5d748c5051043c529ea59fe47c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap_1a9acc3c5d748c5051043c529ea59fe47c" kindref="member">checkOrderOfCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">InterChiplet::SyncCommand</ref>&amp;<sp/>__cmd)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>source<sp/>does<sp/>not<sp/>exist,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>)<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>source<sp/>has<sp/>no<sp/>packet,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>].size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref>&amp;<sp/>delay_item<sp/>=<sp/>(*this)[__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>].begin()-&gt;second;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>command<sp/>matches<sp/>the<sp/>first<sp/>item<sp/>in<sp/>delay<sp/>information<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref><sp/>==<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref><sp/>&amp;&amp;<sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref><sp/>==<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6b92e06047a471a5c1360027b2af6fd0" kindref="member">m_dst</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a6494c45ddeca438d9411473d4e369e51" kindref="member">m_desc</ref><sp/>==<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a08963d12f859e9816d3c94fb4cee69e6" kindref="member">m_desc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::warn(</highlight><highlight class="stringliteral">&quot;Delay<sp/>info<sp/>from<sp/>{},{}<sp/>to<sp/>{},{}<sp/>with<sp/>flag<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>[0],</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>[1],<sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>[0],<sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a33821017829355a4ef367190339c9736" kindref="member">m_dst</ref>[1],</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a6494c45ddeca438d9411473d4e369e51" kindref="member">m_desc</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::warn(</highlight><highlight class="stringliteral">&quot;Command<sp/><sp/><sp/><sp/>from<sp/>{},{}<sp/>to<sp/>{},{}<sp/>with<sp/>flag<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>[0],</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>[1],<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6b92e06047a471a5c1360027b2af6fd0" kindref="member">m_dst</ref>[0],<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6b92e06047a471a5c1360027b2af6fd0" kindref="member">m_dst</ref>[1],<sp/>__cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a08963d12f859e9816d3c94fb4cee69e6" kindref="member">m_desc</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classInterChiplet_1_1NetworkDelayStruct" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classInterChiplet_1_1NetworkDelayStruct" kindref="compound">NetworkDelayStruct</ref><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct" kindref="compound">NetworkDelayStruct</ref>()<sp/>:<sp/>m_item_count(0)<sp/>{}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_item_count;<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289" refid="classInterChiplet_1_1NetworkDelayStruct_1a130d5694631393d080571a30b8989cb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a130d5694631393d080571a30b8989cb6" kindref="member">loadDelayInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>__file_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__clock_rate)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>bench_if(__file_name,<sp/>std::ios::in);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_item_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bench_if)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>item<sp/>from<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bench_if<sp/>&gt;&gt;<sp/>item;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bench_if)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" kindref="member">m_cycle</ref><sp/>=<sp/>item.m_cycle<sp/>/<sp/>__clock_rate;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>item.m_delay_list.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.m_delay_list[i]<sp/>=<sp/>item.m_delay_list[i]<sp/>/<sp/>__clock_rate;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_item_count<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Source<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" kindref="member">insert</ref>(item.m_src,<sp/>item.m_cycle,<sp/>item);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ordering<sp/>of<sp/>barrier,<sp/>launch,<sp/>lock<sp/>and<sp/>unlock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.m_desc<sp/>&amp;<sp/>0xF0000)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>end_cycle<sp/>=<sp/>item.m_cycle<sp/>+<sp/>item.m_delay_list[1];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.m_desc<sp/>&amp;<sp/>SPD_BARRIER)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_barrier_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" kindref="member">insert</ref>(item.m_dst,<sp/>end_cycle,<sp/>item);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.m_desc<sp/>&amp;<sp/>SPD_LAUNCH)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_launch_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" kindref="member">insert</ref>(item.m_dst,<sp/>end_cycle,<sp/>item);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.m_desc<sp/>&amp;<sp/>SPD_LOCK)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lock_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" kindref="member">insert</ref>(item.m_dst,<sp/>end_cycle,<sp/>item);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.m_desc<sp/>&amp;<sp/>SPD_UNLOCK)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_unlock_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a7d555bcd20572c73543f82061b2223f9" kindref="member">insert</ref>(item.m_dst,<sp/>end_cycle,<sp/>item);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classInterChiplet_1_1NetworkDelayStruct_1a8e46736311bf4fba7e19035354797634" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a8e46736311bf4fba7e19035354797634" kindref="member">checkOrderOfCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">InterChiplet::SyncCommand</ref>&amp;<sp/>__cmd)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a9acc3c5d748c5051043c529ea59fe47c" kindref="member">checkOrderOfCommand</ref>(__cmd);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classInterChiplet_1_1NetworkDelayStruct_1ab5031f5ba12c78d6f9b9e5155e526d13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1ab5031f5ba12c78d6f9b9e5155e526d13" kindref="member">clearDelayInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Launch<sp/>delay<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src_delay_map.clear();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Launch<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_launch_delay_map.clear();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Barrier<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_barrier_delay_map.clear();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lock_delay_map.clear();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unlock<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_unlock_delay_map.clear();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354" refid="classInterChiplet_1_1NetworkDelayStruct_1af77f4a956d61486fbf02e66515241e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1af77f4a956d61486fbf02e66515241e59" kindref="member">hasLaunch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_launch_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1abc51e1445630306b6fb81f598bcc432c" kindref="member">hasAddr</ref>(__dst);<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="classInterChiplet_1_1NetworkDelayStruct_1a1bfe8f2a1383ce4066c65b325b958e34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AddrType<sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a1bfe8f2a1383ce4066c65b325b958e34" kindref="member">frontLaunchSrc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_launch_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1ad1c4eec044c5fbcc94a5b799743dd7bc" kindref="member">front</ref>(__dst).<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classInterChiplet_1_1NetworkDelayStruct_1a0250ce37f77eee4ed27c784444f58709" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a0250ce37f77eee4ed27c784444f58709" kindref="member">popLaunch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{<sp/>m_launch_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a5c88e89ebd440cdc43aafcfe4447bcae" kindref="member">pop</ref>(__dst);<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classInterChiplet_1_1NetworkDelayStruct_1a3e4f909a39d0df8a002f5da643e6a920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a3e4f909a39d0df8a002f5da643e6a920" kindref="member">hasLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lock_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1abc51e1445630306b6fb81f598bcc432c" kindref="member">hasAddr</ref>(__dst);<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classInterChiplet_1_1NetworkDelayStruct_1aa868a3f2848c1a18476cb769fd449946" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AddrType<sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1aa868a3f2848c1a18476cb769fd449946" kindref="member">frontLockSrc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lock_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1ad1c4eec044c5fbcc94a5b799743dd7bc" kindref="member">front</ref>(__dst).<ref refid="classInterChiplet_1_1NetworkDelayItem_1a90d4997668a891f3a59653a5db916f2a" kindref="member">m_src</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classInterChiplet_1_1NetworkDelayStruct_1af92e27edc0d28a8670a47e14ddd93461" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1af92e27edc0d28a8670a47e14ddd93461" kindref="member">popLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AddrType&amp;<sp/>__dst)<sp/>{<sp/>m_lock_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a5c88e89ebd440cdc43aafcfe4447bcae" kindref="member">pop</ref>(__dst);<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="404" refid="classInterChiplet_1_1NetworkDelayStruct_1ae2764b301540a58833cb8b29fb6427c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CmdDelayPair<sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1ae2764b301540a58833cb8b29fb6427c2" kindref="member">getEndCycle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">SyncCommand</ref>&amp;<sp/>__write_cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">SyncCommand</ref>&amp;<sp/>__read_cmd)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1abc51e1445630306b6fb81f598bcc432c" kindref="member">hasAddr</ref>(__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>,<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>,<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6b92e06047a471a5c1360027b2af6fd0" kindref="member">m_dst</ref>))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a04cdab02c3b7200162ef92d1fe4f5981" kindref="member">getDefaultEndCycle</ref>(__write_cmd,<sp/>__read_cmd);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayItem" kindref="compound">NetworkDelayItem</ref><sp/>delay_info<sp/>=</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1ad1c4eec044c5fbcc94a5b799743dd7bc" kindref="member">front</ref>(__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>,<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>,<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6b92e06047a471a5c1360027b2af6fd0" kindref="member">m_dst</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1a5c88e89ebd440cdc43aafcfe4447bcae" kindref="member">pop</ref>(__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>,<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a1d0460fb9ad0590948de03987a29c222" kindref="member">m_src</ref>,<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6b92e06047a471a5c1360027b2af6fd0" kindref="member">m_dst</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Launch/Barrier/Lock/Unlock<sp/>communication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a08963d12f859e9816d3c94fb4cee69e6" kindref="member">m_desc</ref><sp/>&amp;<sp/>(SPD_LAUNCH<sp/>|<sp/>SPD_BARRIER<sp/>|<sp/>SPD_LOCK<sp/>|<sp/>SPD_UNLOCK))<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>pac_delay_src<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>[0];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>pac_delay_dst<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>[1];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>write_end_time<sp/>=<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_delay_src;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>read_end_time<sp/>=<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_delay_dst;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>&gt;<sp/>read_end_time)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_end_time<sp/>=<sp/>__read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acknowledge<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>ack_delay_src<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>[2];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>ack_delay_dst<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>[3];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_end_time<sp/>=<sp/>read_end_time<sp/>+<sp/>ack_delay_src;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_end_time<sp/>=<sp/>read_end_time<sp/>-<sp/>ack_delay_src<sp/>+<sp/>ack_delay_dst;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CmdDelayPair(write_end_time,<sp/>read_end_time);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>communication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>pac_delay_src<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>[0];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>pac_delay_dst<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a37291ac73f584c1d8bff0834546e8c44" kindref="member">m_delay_list</ref>[1];</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>write_end_time<sp/>=<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_delay_src;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>read_end_time<sp/>=<sp/>__write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_delay_dst;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>&gt;<sp/>read_end_time)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_end_time<sp/>=<sp/>__read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CmdDelayPair(write_end_time,<sp/>read_end_time);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>InnerTimeType<sp/>getBarrierCycle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;InterChiplet::SyncCommand&gt;&amp;<sp/>barrier_items)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>barrier_cycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>barrier_items)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InnerTimeType<sp/>t_cycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1abc51e1445630306b6fb81f598bcc432c" kindref="member">hasAddr</ref>(item.m_src,<sp/>item.m_src,<sp/>item.m_dst))<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_cycle<sp/>=<sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a04cdab02c3b7200162ef92d1fe4f5981" kindref="member">getDefaultEndCycle</ref>(item);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NetworkDelayItem<sp/>delay_info<sp/>=</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src_delay_map.<ref refid="classInterChiplet_1_1NetworkDelayMap_1ad1c4eec044c5fbcc94a5b799743dd7bc" kindref="member">front</ref>(item.m_src,<sp/>item.m_src,<sp/>item.m_dst);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_cycle<sp/>=<sp/>delay_info.<ref refid="classInterChiplet_1_1NetworkDelayItem_1a4101b476942b4851887e434ba8d83173" kindref="member">m_cycle</ref><sp/>+<sp/>delay_info.m_delay_list[1];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_cycle<sp/>&gt;<sp/>barrier_cycle)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier_cycle<sp/>=<sp/>t_cycle;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>barrier_cycle;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="471" refid="classInterChiplet_1_1NetworkDelayStruct_1a04cdab02c3b7200162ef92d1fe4f5981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>InnerTimeType<sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a04cdab02c3b7200162ef92d1fe4f5981" kindref="member">getDefaultEndCycle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">SyncCommand</ref>&amp;<sp/>write_cmd)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Get<sp/>more<sp/>accurate<sp/>end<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pac_size<sp/>=<sp/>write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6af7e29a25c5ac6adabfcedb2674e2d5" kindref="member">m_nbytes</ref><sp/>/<sp/>PAC_PAYLOAD_BYTE<sp/>+</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6af7e29a25c5ac6adabfcedb2674e2d5" kindref="member">m_nbytes</ref><sp/>%<sp/>PAC_PAYLOAD_BYTE)<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_size;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485" refid="classInterChiplet_1_1NetworkDelayStruct_1a5f4bb6f1fecac6654e76176603acf451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CmdDelayPair<sp/><ref refid="classInterChiplet_1_1NetworkDelayStruct_1a5f4bb6f1fecac6654e76176603acf451" kindref="member">getDefaultEndCycle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">SyncCommand</ref>&amp;<sp/>write_cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInterChiplet_1_1SyncCommand" kindref="compound">SyncCommand</ref>&amp;<sp/>read_cmd)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Get<sp/>more<sp/>accurate<sp/>end<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pac_size<sp/>=<sp/>write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6af7e29a25c5ac6adabfcedb2674e2d5" kindref="member">m_nbytes</ref><sp/>/<sp/>PAC_PAYLOAD_BYTE<sp/>+</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1a6af7e29a25c5ac6adabfcedb2674e2d5" kindref="member">m_nbytes</ref><sp/>%<sp/>PAC_PAYLOAD_BYTE)<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>&gt;=<sp/>read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CmdDelayPair(write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_size,<sp/>write_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_size);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CmdDelayPair(read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_size,<sp/>read_cmd.<ref refid="classInterChiplet_1_1SyncCommand_1aff99dff1a8a7a9736f85bbdf01b0f70a" kindref="member">m_cycle</ref><sp/>+<sp/>pac_size);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_item_count;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap" kindref="compound">NetworkDelayMap</ref><sp/>m_src_delay_map;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap" kindref="compound">NetworkDelayMap</ref><sp/>m_launch_delay_map;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap" kindref="compound">NetworkDelayMap</ref><sp/>m_barrier_delay_map;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap" kindref="compound">NetworkDelayMap</ref><sp/>m_lock_delay_map;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterChiplet_1_1NetworkDelayMap" kindref="compound">NetworkDelayMap</ref><sp/>m_unlock_delay_map;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">};</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>InterChiplet</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/data_sda/junwan02/legosim/Chiplet_Heterogeneous_newVersion/interchiplet/includes/net_delay.h"/>
  </compounddef>
</doxygen>
